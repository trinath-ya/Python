l=[10,20,30,[40,50,60],70,[80,90,20]]. Convert this list as single dimensional list

l=[10,20,30,[40,50,60],70,[80,90,20]]
k=[]
for i in l:
    if type(i)==list:
        for j in i:
            k.append(j)
    else: 
        k.append(i)
print k

input: "Google" print count of each character
	s="Google"
	for i in s:
    	      print i,s.count(i)

Convert n dimensional list to single dimensional list
l=[10, 20, 30, 40, 50, 60, 70, 80, 90, 20]
for i in l:
    print [i],

l=[1,2,3] just make it as a string.
l=[1,2,3] 
print str(l)

l=[1,2,3,[4,5,6],7,[8,9,10]] for single dimensional list
l=[1,2,3,[4,5,6],7,[8,9,10]]
k=[]
for i in l:
    if type(i)==list:
        for j in i:
            k.append(j)
    else:
        k.append(i)
for i in k:
    print [i],



l=['a','A','b','B','d','D','c','C'] WAP to find out case insensitive count and case insensitive search for an element.
l=['a','A','b','B','d','D','c','C']
n=0
for i in l:
    if i.isupper():
        n=n+1
print "Total upper letters in the sentance:%d"%n

l=['a','A','b','B','d','D','c','C']  sort the list properly
l=['a','A','b','B','d','D','c','C']  
l.sort()
print l

find the start position of the largest block of repeated characters in a given string

WAP to find union and intersection of lists.
Intersection:
l=[78,2,3,4,56,7,76,8,5]
m=[3,4,7,34,89,23,5]
k=[]
for i in l:
    for j in m:
        if i==j:
            k.append(i)
print k
Union:
l=[78,2,3,4,56,7,76,8,5]
m=[3,4,7,34,89,23,5]
k=[]
for i in l:
    for j in m:
        if i==j:
            k.append(i)
for j in m:
    l.append(j)
print "union of to list:",l    
print "Intersection of to list:",k
input: fun(5) output: [1,2,3,4,3,2,1]
def fun(a):
    k=[]
    n=1
    while n<a:
        k.append(n)
        n=n+1             
    for i in k[::-1]:
        if (i-1)!=0:
            k.append(i-1)
    print k        
fun(5)
input fun('abc') output: [[],][a],[b],[c],[a,b],[b,c],[c,a],[a,b,c]]

Remove duplicates from the list: a=[1,2,3,2,3,4,1,,3,4]
a=[1,20,3,20,3,4,1,3,4,8]    ##this is program is not working could you please check  the error
for i in a:
    while a.count(i)>1:      
        a.remove(i)
print a

l=['1','2','3'] get the sum of the list
a=[1,2,3,10,33,2]
l=0
for i in a:
    l=l+i
print l
l1=[1,2,3,4] l2=[5,6,7,8] sum of two lists
a=[1,2,3,10,33,2]
b=[3,4,5,6]
for i in b:
    a.append(i)
l=0
for i in a:
    l=l+i
print l

Find third max value of element in a list with soring and without sorting a list.
a=[1,2,3,10,33,58,2]
n=1
while n<3:
    l=max(a)
    a.remove(l)
    n=n+1
print max(a)
Input = ["1/1","1/2","1/3","1/4","2/5","2/6","2/8"] Output = [['1/1-4'], ['2/5-6'], ['2/8']]
Need your help
l=[1,2,3,5,7,8,9,10,11,12,13,20,22,23,24,25,26,27,20,21,22,4] output = [[1, 2, 3], [5], [7, 8, 9, 10, 11, 12, 13], [20], [22, 23, 24, 25, 26, 27], [20, 21, 22], [4]]
need your help
